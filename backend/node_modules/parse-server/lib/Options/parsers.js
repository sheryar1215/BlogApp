"use strict";

function numberParser(key) {
  return function (opt) {
    const intOpt = parseInt(opt);
    if (!Number.isInteger(intOpt)) {
      throw new Error(`Key ${key} has invalid value ${opt}`);
    }
    return intOpt;
  };
}
function numberOrBoolParser(key) {
  return function (opt) {
    if (typeof opt === 'boolean') {
      return opt;
    }
    if (opt === 'true') {
      return true;
    }
    if (opt === 'false') {
      return false;
    }
    return numberParser(key)(opt);
  };
}
function numberOrStringParser(key) {
  return function (opt) {
    if (typeof opt === 'string') {
      return opt;
    }
    return numberParser(key)(opt);
  };
}
function objectParser(opt) {
  if (typeof opt == 'object') {
    return opt;
  }
  return JSON.parse(opt);
}
function arrayParser(opt) {
  if (Array.isArray(opt)) {
    return opt;
  } else if (typeof opt === 'string') {
    return opt.split(',');
  } else {
    throw new Error(`${opt} should be a comma separated string or an array`);
  }
}
function moduleOrObjectParser(opt) {
  if (typeof opt == 'object') {
    return opt;
  }
  try {
    return JSON.parse(opt);
  } catch (e) {
    /* */
  }
  return opt;
}
function booleanParser(opt) {
  if (opt == true || opt == 'true' || opt == '1') {
    return true;
  }
  return false;
}
function nullParser(opt) {
  if (opt == 'null') {
    return null;
  }
  return opt;
}
module.exports = {
  numberParser,
  numberOrBoolParser,
  numberOrStringParser,
  nullParser,
  booleanParser,
  moduleOrObjectParser,
  arrayParser,
  objectParser
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJudW1iZXJQYXJzZXIiLCJrZXkiLCJvcHQiLCJpbnRPcHQiLCJwYXJzZUludCIsIk51bWJlciIsImlzSW50ZWdlciIsIkVycm9yIiwibnVtYmVyT3JCb29sUGFyc2VyIiwibnVtYmVyT3JTdHJpbmdQYXJzZXIiLCJvYmplY3RQYXJzZXIiLCJKU09OIiwicGFyc2UiLCJhcnJheVBhcnNlciIsIkFycmF5IiwiaXNBcnJheSIsInNwbGl0IiwibW9kdWxlT3JPYmplY3RQYXJzZXIiLCJlIiwiYm9vbGVhblBhcnNlciIsIm51bGxQYXJzZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL09wdGlvbnMvcGFyc2Vycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBudW1iZXJQYXJzZXIoa2V5KSB7XG4gIHJldHVybiBmdW5jdGlvbiAob3B0KSB7XG4gICAgY29uc3QgaW50T3B0ID0gcGFyc2VJbnQob3B0KTtcbiAgICBpZiAoIU51bWJlci5pc0ludGVnZXIoaW50T3B0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBLZXkgJHtrZXl9IGhhcyBpbnZhbGlkIHZhbHVlICR7b3B0fWApO1xuICAgIH1cbiAgICByZXR1cm4gaW50T3B0O1xuICB9O1xufVxuXG5mdW5jdGlvbiBudW1iZXJPckJvb2xQYXJzZXIoa2V5KSB7XG4gIHJldHVybiBmdW5jdGlvbiAob3B0KSB7XG4gICAgaWYgKHR5cGVvZiBvcHQgPT09ICdib29sZWFuJykge1xuICAgICAgcmV0dXJuIG9wdDtcbiAgICB9XG4gICAgaWYgKG9wdCA9PT0gJ3RydWUnKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKG9wdCA9PT0gJ2ZhbHNlJykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gbnVtYmVyUGFyc2VyKGtleSkob3B0KTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbnVtYmVyT3JTdHJpbmdQYXJzZXIoa2V5KSB7XG4gIHJldHVybiBmdW5jdGlvbiAob3B0KSB7XG4gICAgaWYgKHR5cGVvZiBvcHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICByZXR1cm4gb3B0O1xuICAgIH1cbiAgICByZXR1cm4gbnVtYmVyUGFyc2VyKGtleSkob3B0KTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gb2JqZWN0UGFyc2VyKG9wdCkge1xuICBpZiAodHlwZW9mIG9wdCA9PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiBvcHQ7XG4gIH1cbiAgcmV0dXJuIEpTT04ucGFyc2Uob3B0KTtcbn1cblxuZnVuY3Rpb24gYXJyYXlQYXJzZXIob3B0KSB7XG4gIGlmIChBcnJheS5pc0FycmF5KG9wdCkpIHtcbiAgICByZXR1cm4gb3B0O1xuICB9IGVsc2UgaWYgKHR5cGVvZiBvcHQgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIG9wdC5zcGxpdCgnLCcpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtvcHR9IHNob3VsZCBiZSBhIGNvbW1hIHNlcGFyYXRlZCBzdHJpbmcgb3IgYW4gYXJyYXlgKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBtb2R1bGVPck9iamVjdFBhcnNlcihvcHQpIHtcbiAgaWYgKHR5cGVvZiBvcHQgPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gb3B0O1xuICB9XG4gIHRyeSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2Uob3B0KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8qICovXG4gIH1cbiAgcmV0dXJuIG9wdDtcbn1cblxuZnVuY3Rpb24gYm9vbGVhblBhcnNlcihvcHQpIHtcbiAgaWYgKG9wdCA9PSB0cnVlIHx8IG9wdCA9PSAndHJ1ZScgfHwgb3B0ID09ICcxJykge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gbnVsbFBhcnNlcihvcHQpIHtcbiAgaWYgKG9wdCA9PSAnbnVsbCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gb3B0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgbnVtYmVyUGFyc2VyLFxuICBudW1iZXJPckJvb2xQYXJzZXIsXG4gIG51bWJlck9yU3RyaW5nUGFyc2VyLFxuICBudWxsUGFyc2VyLFxuICBib29sZWFuUGFyc2VyLFxuICBtb2R1bGVPck9iamVjdFBhcnNlcixcbiAgYXJyYXlQYXJzZXIsXG4gIG9iamVjdFBhcnNlcixcbn07XG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsU0FBU0EsWUFBWUEsQ0FBQ0MsR0FBRyxFQUFFO0VBQ3pCLE9BQU8sVUFBVUMsR0FBRyxFQUFFO0lBQ3BCLE1BQU1DLE1BQU0sR0FBR0MsUUFBUSxDQUFDRixHQUFHLENBQUM7SUFDNUIsSUFBSSxDQUFDRyxNQUFNLENBQUNDLFNBQVMsQ0FBQ0gsTUFBTSxDQUFDLEVBQUU7TUFDN0IsTUFBTSxJQUFJSSxLQUFLLENBQUMsT0FBT04sR0FBRyxzQkFBc0JDLEdBQUcsRUFBRSxDQUFDO0lBQ3hEO0lBQ0EsT0FBT0MsTUFBTTtFQUNmLENBQUM7QUFDSDtBQUVBLFNBQVNLLGtCQUFrQkEsQ0FBQ1AsR0FBRyxFQUFFO0VBQy9CLE9BQU8sVUFBVUMsR0FBRyxFQUFFO0lBQ3BCLElBQUksT0FBT0EsR0FBRyxLQUFLLFNBQVMsRUFBRTtNQUM1QixPQUFPQSxHQUFHO0lBQ1o7SUFDQSxJQUFJQSxHQUFHLEtBQUssTUFBTSxFQUFFO01BQ2xCLE9BQU8sSUFBSTtJQUNiO0lBQ0EsSUFBSUEsR0FBRyxLQUFLLE9BQU8sRUFBRTtNQUNuQixPQUFPLEtBQUs7SUFDZDtJQUNBLE9BQU9GLFlBQVksQ0FBQ0MsR0FBRyxDQUFDLENBQUNDLEdBQUcsQ0FBQztFQUMvQixDQUFDO0FBQ0g7QUFFQSxTQUFTTyxvQkFBb0JBLENBQUNSLEdBQUcsRUFBRTtFQUNqQyxPQUFPLFVBQVVDLEdBQUcsRUFBRTtJQUNwQixJQUFJLE9BQU9BLEdBQUcsS0FBSyxRQUFRLEVBQUU7TUFDM0IsT0FBT0EsR0FBRztJQUNaO0lBQ0EsT0FBT0YsWUFBWSxDQUFDQyxHQUFHLENBQUMsQ0FBQ0MsR0FBRyxDQUFDO0VBQy9CLENBQUM7QUFDSDtBQUVBLFNBQVNRLFlBQVlBLENBQUNSLEdBQUcsRUFBRTtFQUN6QixJQUFJLE9BQU9BLEdBQUcsSUFBSSxRQUFRLEVBQUU7SUFDMUIsT0FBT0EsR0FBRztFQUNaO0VBQ0EsT0FBT1MsSUFBSSxDQUFDQyxLQUFLLENBQUNWLEdBQUcsQ0FBQztBQUN4QjtBQUVBLFNBQVNXLFdBQVdBLENBQUNYLEdBQUcsRUFBRTtFQUN4QixJQUFJWSxLQUFLLENBQUNDLE9BQU8sQ0FBQ2IsR0FBRyxDQUFDLEVBQUU7SUFDdEIsT0FBT0EsR0FBRztFQUNaLENBQUMsTUFBTSxJQUFJLE9BQU9BLEdBQUcsS0FBSyxRQUFRLEVBQUU7SUFDbEMsT0FBT0EsR0FBRyxDQUFDYyxLQUFLLENBQUMsR0FBRyxDQUFDO0VBQ3ZCLENBQUMsTUFBTTtJQUNMLE1BQU0sSUFBSVQsS0FBSyxDQUFDLEdBQUdMLEdBQUcsaURBQWlELENBQUM7RUFDMUU7QUFDRjtBQUVBLFNBQVNlLG9CQUFvQkEsQ0FBQ2YsR0FBRyxFQUFFO0VBQ2pDLElBQUksT0FBT0EsR0FBRyxJQUFJLFFBQVEsRUFBRTtJQUMxQixPQUFPQSxHQUFHO0VBQ1o7RUFDQSxJQUFJO0lBQ0YsT0FBT1MsSUFBSSxDQUFDQyxLQUFLLENBQUNWLEdBQUcsQ0FBQztFQUN4QixDQUFDLENBQUMsT0FBT2dCLENBQUMsRUFBRTtJQUNWO0VBQUE7RUFFRixPQUFPaEIsR0FBRztBQUNaO0FBRUEsU0FBU2lCLGFBQWFBLENBQUNqQixHQUFHLEVBQUU7RUFDMUIsSUFBSUEsR0FBRyxJQUFJLElBQUksSUFBSUEsR0FBRyxJQUFJLE1BQU0sSUFBSUEsR0FBRyxJQUFJLEdBQUcsRUFBRTtJQUM5QyxPQUFPLElBQUk7RUFDYjtFQUNBLE9BQU8sS0FBSztBQUNkO0FBRUEsU0FBU2tCLFVBQVVBLENBQUNsQixHQUFHLEVBQUU7RUFDdkIsSUFBSUEsR0FBRyxJQUFJLE1BQU0sRUFBRTtJQUNqQixPQUFPLElBQUk7RUFDYjtFQUNBLE9BQU9BLEdBQUc7QUFDWjtBQUVBbUIsTUFBTSxDQUFDQyxPQUFPLEdBQUc7RUFDZnRCLFlBQVk7RUFDWlEsa0JBQWtCO0VBQ2xCQyxvQkFBb0I7RUFDcEJXLFVBQVU7RUFDVkQsYUFBYTtFQUNiRixvQkFBb0I7RUFDcEJKLFdBQVc7RUFDWEg7QUFDRixDQUFDIiwiaWdub3JlTGlzdCI6W119