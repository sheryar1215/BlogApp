"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.DefaultMongoURI = void 0;
var _parsers = require("./Options/parsers");
const {
  ParseServerOptions
} = require('./Options/Definitions');
const logsFolder = (() => {
  let folder = './logs/';
  if (typeof process !== 'undefined' && process.env.TESTING === '1') {
    folder = './test_logs/';
  }
  if (process.env.PARSE_SERVER_LOGS_FOLDER) {
    folder = (0, _parsers.nullParser)(process.env.PARSE_SERVER_LOGS_FOLDER);
  }
  return folder;
})();
const {
  verbose,
  level
} = (() => {
  const verbose = process.env.VERBOSE ? true : false;
  return {
    verbose,
    level: verbose ? 'verbose' : undefined
  };
})();
const DefinitionDefaults = Object.keys(ParseServerOptions).reduce((memo, key) => {
  const def = ParseServerOptions[key];
  if (Object.prototype.hasOwnProperty.call(def, 'default')) {
    memo[key] = def.default;
  }
  return memo;
}, {});
const computedDefaults = {
  jsonLogs: process.env.JSON_LOGS || false,
  logsFolder,
  verbose,
  level
};
var _default = exports.default = Object.assign({}, DefinitionDefaults, computedDefaults);
const DefaultMongoURI = exports.DefaultMongoURI = DefinitionDefaults.databaseURI;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcGFyc2VycyIsInJlcXVpcmUiLCJQYXJzZVNlcnZlck9wdGlvbnMiLCJsb2dzRm9sZGVyIiwiZm9sZGVyIiwicHJvY2VzcyIsImVudiIsIlRFU1RJTkciLCJQQVJTRV9TRVJWRVJfTE9HU19GT0xERVIiLCJudWxsUGFyc2VyIiwidmVyYm9zZSIsImxldmVsIiwiVkVSQk9TRSIsInVuZGVmaW5lZCIsIkRlZmluaXRpb25EZWZhdWx0cyIsIk9iamVjdCIsImtleXMiLCJyZWR1Y2UiLCJtZW1vIiwia2V5IiwiZGVmIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVmYXVsdCIsImNvbXB1dGVkRGVmYXVsdHMiLCJqc29uTG9ncyIsIkpTT05fTE9HUyIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImFzc2lnbiIsIkRlZmF1bHRNb25nb1VSSSIsImRhdGFiYXNlVVJJIl0sInNvdXJjZXMiOlsiLi4vc3JjL2RlZmF1bHRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG51bGxQYXJzZXIgfSBmcm9tICcuL09wdGlvbnMvcGFyc2Vycyc7XG5jb25zdCB7IFBhcnNlU2VydmVyT3B0aW9ucyB9ID0gcmVxdWlyZSgnLi9PcHRpb25zL0RlZmluaXRpb25zJyk7XG5jb25zdCBsb2dzRm9sZGVyID0gKCgpID0+IHtcbiAgbGV0IGZvbGRlciA9ICcuL2xvZ3MvJztcbiAgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzLmVudi5URVNUSU5HID09PSAnMScpIHtcbiAgICBmb2xkZXIgPSAnLi90ZXN0X2xvZ3MvJztcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuUEFSU0VfU0VSVkVSX0xPR1NfRk9MREVSKSB7XG4gICAgZm9sZGVyID0gbnVsbFBhcnNlcihwcm9jZXNzLmVudi5QQVJTRV9TRVJWRVJfTE9HU19GT0xERVIpO1xuICB9XG4gIHJldHVybiBmb2xkZXI7XG59KSgpO1xuXG5jb25zdCB7IHZlcmJvc2UsIGxldmVsIH0gPSAoKCkgPT4ge1xuICBjb25zdCB2ZXJib3NlID0gcHJvY2Vzcy5lbnYuVkVSQk9TRSA/IHRydWUgOiBmYWxzZTtcbiAgcmV0dXJuIHsgdmVyYm9zZSwgbGV2ZWw6IHZlcmJvc2UgPyAndmVyYm9zZScgOiB1bmRlZmluZWQgfTtcbn0pKCk7XG5cbmNvbnN0IERlZmluaXRpb25EZWZhdWx0cyA9IE9iamVjdC5rZXlzKFBhcnNlU2VydmVyT3B0aW9ucykucmVkdWNlKChtZW1vLCBrZXkpID0+IHtcbiAgY29uc3QgZGVmID0gUGFyc2VTZXJ2ZXJPcHRpb25zW2tleV07XG4gIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZGVmLCAnZGVmYXVsdCcpKSB7XG4gICAgbWVtb1trZXldID0gZGVmLmRlZmF1bHQ7XG4gIH1cbiAgcmV0dXJuIG1lbW87XG59LCB7fSk7XG5cbmNvbnN0IGNvbXB1dGVkRGVmYXVsdHMgPSB7XG4gIGpzb25Mb2dzOiBwcm9jZXNzLmVudi5KU09OX0xPR1MgfHwgZmFsc2UsXG4gIGxvZ3NGb2xkZXIsXG4gIHZlcmJvc2UsXG4gIGxldmVsLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmFzc2lnbih7fSwgRGVmaW5pdGlvbkRlZmF1bHRzLCBjb21wdXRlZERlZmF1bHRzKTtcbmV4cG9ydCBjb25zdCBEZWZhdWx0TW9uZ29VUkkgPSBEZWZpbml0aW9uRGVmYXVsdHMuZGF0YWJhc2VVUkk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLFFBQUEsR0FBQUMsT0FBQTtBQUNBLE1BQU07RUFBRUM7QUFBbUIsQ0FBQyxHQUFHRCxPQUFPLENBQUMsdUJBQXVCLENBQUM7QUFDL0QsTUFBTUUsVUFBVSxHQUFHLENBQUMsTUFBTTtFQUN4QixJQUFJQyxNQUFNLEdBQUcsU0FBUztFQUN0QixJQUFJLE9BQU9DLE9BQU8sS0FBSyxXQUFXLElBQUlBLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxPQUFPLEtBQUssR0FBRyxFQUFFO0lBQ2pFSCxNQUFNLEdBQUcsY0FBYztFQUN6QjtFQUNBLElBQUlDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRSx3QkFBd0IsRUFBRTtJQUN4Q0osTUFBTSxHQUFHLElBQUFLLG1CQUFVLEVBQUNKLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRSx3QkFBd0IsQ0FBQztFQUMzRDtFQUNBLE9BQU9KLE1BQU07QUFDZixDQUFDLEVBQUUsQ0FBQztBQUVKLE1BQU07RUFBRU0sT0FBTztFQUFFQztBQUFNLENBQUMsR0FBRyxDQUFDLE1BQU07RUFDaEMsTUFBTUQsT0FBTyxHQUFHTCxPQUFPLENBQUNDLEdBQUcsQ0FBQ00sT0FBTyxHQUFHLElBQUksR0FBRyxLQUFLO0VBQ2xELE9BQU87SUFBRUYsT0FBTztJQUFFQyxLQUFLLEVBQUVELE9BQU8sR0FBRyxTQUFTLEdBQUdHO0VBQVUsQ0FBQztBQUM1RCxDQUFDLEVBQUUsQ0FBQztBQUVKLE1BQU1DLGtCQUFrQixHQUFHQyxNQUFNLENBQUNDLElBQUksQ0FBQ2Qsa0JBQWtCLENBQUMsQ0FBQ2UsTUFBTSxDQUFDLENBQUNDLElBQUksRUFBRUMsR0FBRyxLQUFLO0VBQy9FLE1BQU1DLEdBQUcsR0FBR2xCLGtCQUFrQixDQUFDaUIsR0FBRyxDQUFDO0VBQ25DLElBQUlKLE1BQU0sQ0FBQ00sU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0gsR0FBRyxFQUFFLFNBQVMsQ0FBQyxFQUFFO0lBQ3hERixJQUFJLENBQUNDLEdBQUcsQ0FBQyxHQUFHQyxHQUFHLENBQUNJLE9BQU87RUFDekI7RUFDQSxPQUFPTixJQUFJO0FBQ2IsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBRU4sTUFBTU8sZ0JBQWdCLEdBQUc7RUFDdkJDLFFBQVEsRUFBRXJCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDcUIsU0FBUyxJQUFJLEtBQUs7RUFDeEN4QixVQUFVO0VBQ1ZPLE9BQU87RUFDUEM7QUFDRixDQUFDO0FBQUMsSUFBQWlCLFFBQUEsR0FBQUMsT0FBQSxDQUFBTCxPQUFBLEdBRWFULE1BQU0sQ0FBQ2UsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFaEIsa0JBQWtCLEVBQUVXLGdCQUFnQixDQUFDO0FBQy9ELE1BQU1NLGVBQWUsR0FBQUYsT0FBQSxDQUFBRSxlQUFBLEdBQUdqQixrQkFBa0IsQ0FBQ2tCLFdBQVciLCJpZ25vcmVMaXN0IjpbXX0=